----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Text Cell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Welcome to Yuna!

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Text Cell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## What is Yuna?

<br>

Yuna is a fully self-contained computational notebook *and* platform. Grounded in research by [Chattopadhyay et al. (2020)](https://dl.acm.org/doi/abs/10.1145/3313831.3376729), Yuna is designed to soothe numerous pain points associated with computational platforms:
- *Managing code*
- *Ensuring reliability*
- *Archiving*
- *Sharing and collaborating*
- *Reproducing and reusing*

<br>

Whether you're a student, professional, or academic, Yuna can make your work easier.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Text Cell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## Getting started

<br>

The document you are reading is not a static web page, but an interface called a *computational notebook* that lets you write and execute code.

<br>

For example, here is a *code cell* with a short Python script that computes a value, stores it in a variable, and prints the result:

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Code Cell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
seconds_in_a_day = 24 * 60 * 60
seconds_in_a_day

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Text Cell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
To execute the code in the above cell, select it with a click and then press the play button to the left of the code. To edit the code, just click the cell and start typing.

<br>

Variables that you define in one cell can later be used in other cells:

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Code Cell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
seconds_in_a_week = 7 * seconds_in_a_day
seconds_in_a_week

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Text Cell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
With Yuna you can harness the full power of popular Python libraries to analyse and visualise data. The code cell below uses numpy to generate some random data, and uses matplotlib to visualise it. To edit the code, just click the cell and start editing.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Code Cell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import numpy as np
from matplotlib import pyplot as plt

ys = 200 + np.random.randn(100)
x = [x for x in range(len(ys))]

plt.plot(x, ys, '-')
plt.fill_between(x, ys, 195, where=(ys > 195), facecolor='g', alpha=0.6)

plt.title("Sample Visualisation")
plt.show()

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Text Cell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## Saving work

</br>

Unlike existing computational platforms that only allow for saving the notebook, Yuna saves the entire computational *state*â€”the notebook, variables, functions, imports, *and* packages. As a result, after saving an environment, either by clicking "Save environment" under the "File" menu or by pressing `ctrl/cmd + S`, you can re-open it *and continue from exactly where you left off*. 

</br>

Go ahead, try it out. Save this environment, re-open it, and run the code below. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Code Cell
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# t = np.arange(0., 5., 0.2)
# plt.plot(t, t, 'r--', t, t**2, 'bs', t, t**3, 'g^')
# plt.show()